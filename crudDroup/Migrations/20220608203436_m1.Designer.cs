// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crudDroup.Models;

namespace crudDroup.Migrations
{
    [DbContext(typeof(DbConnection))]
    [Migration("20220608203436_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("crudDroup.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("stateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("stateId");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("crudDroup.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cityId")
                        .HasColumnType("int");

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.Property<int?>("stateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cityId");

                    b.HasIndex("countryId");

                    b.HasIndex("stateId");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("crudDroup.Models.country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("C_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("crudDroup.Models.state", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("S_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.ToTable("states");
                });

            modelBuilder.Entity("crudDroup.Models.City", b =>
                {
                    b.HasOne("crudDroup.Models.state", "state")
                        .WithMany()
                        .HasForeignKey("stateId");

                    b.Navigation("state");
                });

            modelBuilder.Entity("crudDroup.Models.Employee", b =>
                {
                    b.HasOne("crudDroup.Models.City", "city")
                        .WithMany()
                        .HasForeignKey("cityId");

                    b.HasOne("crudDroup.Models.country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("crudDroup.Models.state", "state")
                        .WithMany()
                        .HasForeignKey("stateId");

                    b.Navigation("city");

                    b.Navigation("country");

                    b.Navigation("state");
                });

            modelBuilder.Entity("crudDroup.Models.state", b =>
                {
                    b.HasOne("crudDroup.Models.country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.Navigation("country");
                });
#pragma warning restore 612, 618
        }
    }
}
